.timeline {
  --marker-size: 1px;
  --year-font-size: 1.5rem;
  --year-bottom-padding: .2rem;
  --month-font-size: 1rem;
  --marker-colour: var(--fgc);
  --year-indicator-width: 4rem;

  display: flex;
  flex-wrap: wrap;

  --year-size: calc(
    var(--year-font-size) +
    var(--year-bottom-padding)
  );

  --sticky-month-offset: calc(
    var(--sticky-year-offset) +
    var(--year-size)
  );
}

.year + .year { border-top: 1px solid var(--fgc); }

.yearIndicator, .year { width: 100% }
.year {
  z-index: 2;
  margin: 0 0 3rem 0;
}

.year > .group {
  display: flex;
  flex-wrap: wrap;
  grid-area: months;
}

.title { margin-bottom: .2rem }


/*
  You might say to me -- "thomas, my good friend,
  my brother-in-arms: why do you use `counter-reset`
  so weirdly here? You already have --timeline-year."

  "Ah", I say, smoking an imaginary tobbacco-free pipe
  and blowing out large clouds of smoke; "you see --
  it seems that CSS pseudoelements can't inherit CSS variables because they don't have true DOM parentage."
*/

.yearIndicator {
  counter-reset: birth-year calc(var(--timeline-year)
    - 1994) year var(--timeline-year);

  composes: GridArea from "../grid.module.css";
    grid: "birthYearIndicator . yearIndicator" /
      var(--year-indicator-width) 1fr var(--year-indicator-width);
  z-index: 1;
  padding-bottom: var(--year-bottom-padding);
  position: sticky;
  top: var(--sticky-year-offset, 0);
}

.yearIndicator::after {
  content: counter(year);
  font-size: var(--year-font-size);
  text-align: right;
  grid-area: yearIndicator;
}

.yearIndicator::before {
  grid-area: birthYearIndicator;
  content: counter(birth-year, upper-roman);
  background-color: var(--bgc);
  box-sizing: border-box;
  font-size: var(--year-font-size);
}

.month {
  --event-margin-width: calc(
    var(--year-indicator-width) +
    .5rem
  );
}


.monthIndicator {
  position: sticky;
  top: var(--sticky-month-offset, 0);
  padding-left: calc(
    var(--year-indicator-width) / 2
  )
}


.monthIndicator::after {
  /* border-top: var(--marker-size) solid var(--marker-colour); */
  content: "";
  font-size: var(--month-font-size);
}

.monthIndicator::before {
  opacity: .5;
  text-transform:lowercase;
}

.monthIndicator[data-month="0"]::before { content: "Jan" }
.monthIndicator[data-month="1"]::before { content: "Feb" }
.monthIndicator[data-month="2"]::before { content: "Mar" }
.monthIndicator[data-month="3"]::before { content: "Apr" }
.monthIndicator[data-month="4"]::before { content: "May" }
.monthIndicator[data-month="5"]::before { content: "Jun" }
.monthIndicator[data-month="6"]::before { content: "Jul" }
.monthIndicator[data-month="7"]::before { content: "Aug" }
.monthIndicator[data-month="8"]::before { content: "Sep" }
.monthIndicator[data-month="9"]::before { content: "Oct" }
.monthIndicator[data-month="10"]::before { content: "Nov" }
.monthIndicator[data-month="11"]::before { content: "Dec" }

.event {
  max-width: 30rem;
  box-sizing: border-box;
  margin: 1rem var(--event-margin-width);
  text-transform: lowercase;
}

.event::before {
  opacity: .7;
  content: "- ";
  display: inline;
}

.duration { display: inline }
.duration:before { content: "(" }
.duration:after { content: ")" }

.event p:first-of-type { display:inline }
.event p:first-of-type:before { content: " " }
